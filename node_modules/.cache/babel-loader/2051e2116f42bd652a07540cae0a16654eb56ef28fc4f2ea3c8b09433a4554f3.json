{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projeto-MoreLife\\\\morelife\\\\src\\\\components\\\\dashForms\\\\formAccount.js\",\n  _s = $RefreshSig$();\nimport styles from './cssForms/forms.module.css';\nimport { useState, useEffect } from 'react';\nimport ButtonForm from '../form/buttonForm';\nimport Input from '../form/input';\nimport Message from '../layout/message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FormAccount(_ref) {\n  _s();\n  let {\n    handleSubmit,\n    txtBtn\n  } = _ref;\n  const [user, setUser] = useState([]);\n  const [newPass, setNewPass] = useState({\n    'user_passAn': '',\n    'user_passNew': '',\n    'conf_user_passNew': ''\n  });\n  const [message, setMessage] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const id = localStorage.getItem(\"id\");\n  const regexEmail = /\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/;\n  const regexPass = /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])([a-zA-Z0-9]{8,})$/;\n  useEffect(() => {\n    fetch(`http://localhost:5000/users/${id}`, {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(resp => resp.json()).then(data => {\n      setUser(data);\n    }).catch(err => console.log(err));\n  }, [id]);\n  function validateForm() {\n    setMessage('');\n    if (user.user_email === '') {\n      setMessage('O email deve estar preenchido!');\n      setType('error');\n      return false;\n    }\n    if (user.user_pass !== newPass.user_passAn) {\n      setMessage('A senha atual deve se coincidir!');\n      setType('error');\n      return false;\n    }\n    if (newPass.user_passAn === newPass.user_passNew) {\n      setMessage('A nova senha deve ser diferente da atual!');\n      setType('error');\n      return false;\n    }\n    if ((newPass.user_passNew === '' || newPass.conf_user_passNew === '') && newPass.user_passAn !== '') {\n      setMessage('Para atualizar é necessário preencher os campos');\n      setType('error');\n      return false;\n    }\n    if (regexEmail.test(user.user_email) === false) {\n      setMessage('O email deve existir!');\n      setType('error');\n      return false;\n    }\n    if (regexPass.test(newPass.user_passNew) === false) {\n      setMessage('A senha deve possuir no mínimo 8 caracteres, 1 número, uma letra minúscula euma letra maiúscula!');\n      setType('error');\n      return false;\n    }\n    if (newPass.user_passNew !== newPass.conf_user_passNew) {\n      setMessage('A nova senha deve se coincidir!');\n      setType('error');\n      return false;\n    }\n    setMessage('Atualização feita com sucesso!');\n    setType('success');\n    return handleSubmit(user);\n  }\n  function OnChange(e) {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value\n    });\n  }\n  function OnChangePass(e) {\n    setNewPass({\n      ...newPass,\n      [e.target.name]: e.target.value\n    });\n  }\n  function submit(e) {\n    e.preventDefault();\n    validateForm();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.formContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dados da Conta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n      msg: message,\n      type: type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"email\",\n        text: \"Email\",\n        nameInput: \"user_email\",\n        placeholder: \"Digite um novo email\",\n        value: user.user_email ? user.user_email : '',\n        handleOnChange: OnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        text: \"Senha atual\",\n        nameInput: \"user_passAn\",\n        placeholder: \"Digite sua senha atual\",\n        handleOnChange: OnChangePass\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        text: \"Nova senha\",\n        nameInput: \"user_passNew\",\n        placeholder: \"Digite sua nova senha\",\n        handleOnChange: OnChangePass\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        text: \"Confirmar senha\",\n        nameInput: \"conf_user_passNew\",\n        placeholder: \"Confirme sua nova senha\",\n        handleOnChange: OnChangePass\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.btnContainer,\n        children: /*#__PURE__*/_jsxDEV(ButtonForm, {\n          text: txtBtn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}\n_s(FormAccount, \"t2pi8XkuJKgszpFQH/8LWkT++XI=\");\n_c = FormAccount;\nexport default FormAccount;\nvar _c;\n$RefreshReg$(_c, \"FormAccount\");","map":{"version":3,"names":["styles","useState","useEffect","ButtonForm","Input","Message","jsxDEV","_jsxDEV","FormAccount","_ref","_s","handleSubmit","txtBtn","user","setUser","newPass","setNewPass","message","setMessage","type","setType","id","localStorage","getItem","regexEmail","regexPass","fetch","method","headers","then","resp","json","data","catch","err","console","log","validateForm","user_email","user_pass","user_passAn","user_passNew","conf_user_passNew","test","OnChange","e","target","name","value","OnChangePass","submit","preventDefault","className","formContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","msg","onSubmit","text","nameInput","placeholder","handleOnChange","btnContainer","_c","$RefreshReg$"],"sources":["D:/Projeto-MoreLife/morelife/src/components/dashForms/formAccount.js"],"sourcesContent":["import styles from './cssForms/forms.module.css'\r\n\r\nimport {useState, useEffect} from 'react'\r\n\r\nimport ButtonForm from '../form/buttonForm'\r\nimport Input from '../form/input'\r\nimport Message from '../layout/message'\r\n\r\nfunction FormAccount({handleSubmit, txtBtn}){\r\n    const [user, setUser] = useState([])\r\n    const [newPass, setNewPass] = useState({\r\n        'user_passAn': '', \r\n        'user_passNew':'', \r\n        'conf_user_passNew': ''\r\n    })\r\n    const [message, setMessage] = useState(\"\")\r\n    const [type, setType] = useState(\"\")\r\n    const id = localStorage.getItem(\"id\")\r\n\r\n    const regexEmail = /\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/;\r\n    const regexPass = /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])([a-zA-Z0-9]{8,})$/;\r\n\r\n    useEffect(() =>{\r\n        fetch(`http://localhost:5000/users/${id}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then((resp) => resp.json())\r\n            .then((data) => {\r\n                setUser(data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    },[id])\r\n    \r\n    function validateForm() {\r\n        setMessage('')\r\n        if(user.user_email === ''){\r\n            setMessage('O email deve estar preenchido!')\r\n            setType('error')\r\n            return false\r\n        }\r\n        if(user.user_pass !== newPass.user_passAn){\r\n            setMessage('A senha atual deve se coincidir!')\r\n            setType('error')\r\n            return false\r\n        }\r\n        if(newPass.user_passAn === newPass.user_passNew){\r\n            setMessage('A nova senha deve ser diferente da atual!')\r\n            setType('error')\r\n            return false\r\n        }\r\n        if((newPass.user_passNew === '' || newPass.conf_user_passNew === '') && newPass.user_passAn !== ''){\r\n            setMessage('Para atualizar é necessário preencher os campos')\r\n            setType('error')\r\n            return false\r\n        }\r\n\r\n        if (regexEmail.test(user.user_email) === false) {\r\n            setMessage('O email deve existir!')\r\n            setType('error')\r\n            return false\r\n        }\r\n        if (regexPass.test(newPass.user_passNew) === false) {\r\n            setMessage('A senha deve possuir no mínimo 8 caracteres, 1 número, uma letra minúscula euma letra maiúscula!')\r\n            setType('error')\r\n            return false\r\n        }\r\n        if(newPass.user_passNew !== newPass.conf_user_passNew){\r\n            setMessage('A nova senha deve se coincidir!')\r\n            setType('error')\r\n            return false\r\n        }\r\n\r\n        setMessage('Atualização feita com sucesso!')\r\n        setType('success')\r\n        return handleSubmit(user)\r\n    }\r\n\r\n    function OnChange(e) {\r\n        setUser({...user,[e.target.name]:e.target.value})\r\n    }\r\n\r\n    function OnChangePass(e) {\r\n        setNewPass({...newPass,[e.target.name]:e.target.value})\r\n    }\r\n\r\n    function submit(e){\r\n        e.preventDefault()\r\n        validateForm()\r\n    }\r\n\r\n    return (\r\n        <div className={styles.formContainer}>\r\n            <h2>Dados da Conta</h2>\r\n            {message && <Message msg={message} type={type} />}\r\n            <form onSubmit={submit}>\r\n                <Input\r\n                    type=\"email\"\r\n                    text=\"Email\"\r\n                    nameInput=\"user_email\"\r\n                    placeholder=\"Digite um novo email\"\r\n                    value={user.user_email ? user.user_email : ''}\r\n                    handleOnChange={OnChange}\r\n                />\r\n                <Input\r\n                    type=\"password\"\r\n                    text=\"Senha atual\"\r\n                    nameInput=\"user_passAn\"\r\n                    placeholder=\"Digite sua senha atual\"\r\n                    handleOnChange={OnChangePass}\r\n                />\r\n                <Input\r\n                    type=\"password\"\r\n                    text=\"Nova senha\"\r\n                    nameInput=\"user_passNew\"\r\n                    placeholder=\"Digite sua nova senha\"\r\n                    handleOnChange={OnChangePass}\r\n                />\r\n                <Input\r\n                    type=\"password\"\r\n                    text=\"Confirmar senha\"\r\n                    nameInput=\"conf_user_passNew\"\r\n                    placeholder=\"Confirme sua nova senha\"\r\n                    handleOnChange={OnChangePass}\r\n                />\r\n\r\n                <div className={styles.btnContainer}>\r\n                    <ButtonForm text={txtBtn}/>\r\n                </div>\r\n                \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormAccount"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}