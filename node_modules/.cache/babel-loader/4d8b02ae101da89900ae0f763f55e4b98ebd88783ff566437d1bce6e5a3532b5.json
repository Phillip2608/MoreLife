{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projeto-MoreLife\\\\morelife\\\\src\\\\routes\\\\info.js\",\n  _s = $RefreshSig$();\nimport styles from './cssRoutes/info.module.css';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport FormPerson from '../components/dashForms/formPerson';\nimport FormAccount from '../components/dashForms/formAccount';\nimport FormResp from '../components/dashForms/formResp';\nimport CardRespon from '../components/dashboard/cardRespon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Info() {\n  _s();\n  const [user, setUser] = useState({});\n  const [allRespon, setAllRespon] = useState([]);\n  const id = parseInt(localStorage.getItem(\"id\"));\n  const navigate = useNavigate();\n  function updatePerson(user) {}\n  function updateAccount(user) {}\n  function addRespon(respon) {}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.infoContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.forms,\n      children: [/*#__PURE__*/_jsxDEV(FormPerson, {\n        txtBtn: \"Atualizar\",\n        handleSubmit: updatePerson,\n        dataUser: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormAccount, {\n        txtBtn: \"Atualizar\",\n        handleSubmit: updateAccount,\n        dataUser: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormResp, {\n        txtBtn: \"Adicionar\",\n        handleSubmit: addRespon,\n        dataUser: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.titleContainer,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Respons\\xE1veis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.responContainer,\n      children: allRespon.map(respon => {\n        if (respon.id_user === id) {\n          return /*#__PURE__*/_jsxDEV(CardRespon, {\n            name: respon.name,\n            cell: respon.cell\n          }, respon.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(Info, \"NQmbSVxyh1WXKJZZ+lrSzqvgW0o=\", false, function () {\n  return [useNavigate];\n});\n_c = Info;\nexport default Info;\nvar _c;\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"names":["styles","useState","useEffect","useNavigate","FormPerson","FormAccount","FormResp","CardRespon","jsxDEV","_jsxDEV","Info","_s","user","setUser","allRespon","setAllRespon","id","parseInt","localStorage","getItem","navigate","updatePerson","updateAccount","addRespon","respon","className","infoContainer","children","forms","txtBtn","handleSubmit","dataUser","fileName","_jsxFileName","lineNumber","columnNumber","titleContainer","responContainer","map","id_user","name","cell","_c","$RefreshReg$"],"sources":["D:/Projeto-MoreLife/morelife/src/routes/info.js"],"sourcesContent":["import styles from './cssRoutes/info.module.css'\r\n\r\nimport {useState, useEffect} from 'react'\r\nimport {useNavigate} from 'react-router-dom'\r\n\r\nimport FormPerson from '../components/dashForms/formPerson'\r\nimport FormAccount from '../components/dashForms/formAccount'\r\nimport FormResp from '../components/dashForms/formResp'\r\nimport CardRespon from '../components/dashboard/cardRespon'\r\n\r\nfunction Info(){\r\n    const [user, setUser] = useState({})\r\n    const [allRespon, setAllRespon] = useState([])\r\n    const id = parseInt(localStorage.getItem(\"id\"))\r\n    const navigate = useNavigate()\r\n\r\n    function updatePerson(user) {\r\n        \r\n    }\r\n\r\n    function updateAccount(user) {\r\n        \r\n    }\r\n\r\n    function addRespon(respon) {\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className={styles.infoContainer}>\r\n            <div className={styles.forms}>\r\n                <FormPerson \r\n                    txtBtn=\"Atualizar\"\r\n                    handleSubmit={updatePerson}\r\n                    dataUser={user}\r\n                />\r\n                <FormAccount \r\n                    txtBtn=\"Atualizar\"\r\n                    handleSubmit={updateAccount}\r\n                    dataUser={user}\r\n                />\r\n                <FormResp\r\n                    txtBtn=\"Adicionar\"\r\n                    handleSubmit={addRespon}\r\n                    dataUser={user}\r\n                />\r\n            </div>\r\n            <div className={styles.titleContainer}>\r\n                <h2>Respons√°veis</h2>\r\n            </div>\r\n            <div className={styles.responContainer}>\r\n                {allRespon.map(respon =>{\r\n                    if(respon.id_user === id){\r\n                        return(\r\n                            <CardRespon\r\n                                name={respon.name}\r\n                                cell={respon.cell}\r\n                                key={respon.id}\r\n                            />\r\n                        )\r\n                    }\r\n                })}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Info"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}