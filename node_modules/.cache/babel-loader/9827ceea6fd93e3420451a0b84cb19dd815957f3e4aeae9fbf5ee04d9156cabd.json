{"ast":null,"code":"import _defineProperty from\"D:/Projeto-MoreLife/morelife/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"D:/Projeto-MoreLife/morelife/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"D:/Projeto-MoreLife/morelife/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import styles from'./cssForms/forms.module.css';import{useState}from'react';import ButtonForm from'../form/buttonForm';import Input from'../form/input';import Message from'../layout/message';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function FormAccount(_ref){var handleSubmit=_ref.handleSubmit,txtBtn=_ref.txtBtn,dataUser=_ref.dataUser;var _useState=useState({'user_passAn':'','user_passNew':'','conf_user_passNew':'','user_newEmail':''}),_useState2=_slicedToArray(_useState,2),newPass=_useState2[0],setNewPass=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),message=_useState4[0],setMessage=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),type=_useState6[0],setType=_useState6[1];var user=dataUser;var regexEmail=/\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/;var regexPass=/^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])([a-zA-Z0-9]{8,})$/;newPass.user_newEmail=user.user_email;function validateForm(){setMessage('');if(newPass.user_newEmail===''){setMessage('O email deve estar preenchido!');setType('error');return false;}if(user.user_pass!==newPass.user_passAn){setMessage('A senha atual deve se coincidir!');setType('error');return false;}if(newPass.user_passAn===newPass.user_passNew){setMessage('A nova senha deve ser diferente da atual!');setType('error');return false;}if((newPass.user_passNew===''||newPass.conf_user_passNew==='')&&newPass.user_passAn!==''){setMessage('Para atualizar é necessário preencher os campos');setType('error');return false;}if(regexEmail.test(newPass.user_newEmail)===false){setMessage('O email deve existir!');setType('error');return false;}if(regexPass.test(newPass.user_passNew)===false){setMessage('A senha deve possuir no mínimo 8 caracteres, 1 número, uma letra minúscula e uma letra maiúscula!');setType('error');return false;}if(newPass.user_passNew!==newPass.conf_user_passNew){setMessage('A nova senha deve se coincidir!');setType('error');return false;}user.user_pass=newPass.user_passNew;user.user_confPass=newPass.conf_user_passNew;user.user_email=newPass.user_newEmail;newPass.user_passAn='';newPass.user_passNew='';newPass.conf_user_passNew='';setMessage('Atualização feita com sucesso!');setType('success');return handleSubmit(user);}function OnChangePass(e){setNewPass(_objectSpread(_objectSpread({},newPass),{},_defineProperty({},e.target.name,e.target.value)));setMessage('');}function submit(e){e.preventDefault();validateForm();}return/*#__PURE__*/_jsxs(\"div\",{className:styles.formContainer,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Dados da Conta\"}),message&&/*#__PURE__*/_jsx(Message,{msg:message,type:type}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:submit,children:[/*#__PURE__*/_jsx(Input,{type:\"email\",text:\"Email\",nameInput:\"user_newEmail\",placeholder:\"Digite um novo email\",value:newPass.user_newEmail?newPass.user_newEmail:'',handleOnChange:OnChangePass}),/*#__PURE__*/_jsx(Input,{type:\"password\",text:\"Senha atual\",nameInput:\"user_passAn\",placeholder:\"Digite sua senha atual\",value:newPass.user_passAn?newPass.user_passAn:'',handleOnChange:OnChangePass}),/*#__PURE__*/_jsx(Input,{type:\"password\",text:\"Nova senha\",nameInput:\"user_passNew\",placeholder:\"Digite sua nova senha\",value:newPass.user_passNew?newPass.user_passNew:'',handleOnChange:OnChangePass}),/*#__PURE__*/_jsx(Input,{type:\"password\",text:\"Confirmar senha\",nameInput:\"conf_user_passNew\",value:newPass.conf_user_passNew?newPass.conf_user_passNew:'',placeholder:\"Confirme sua nova senha\",handleOnChange:OnChangePass}),/*#__PURE__*/_jsx(\"div\",{className:styles.btnContainer,children:/*#__PURE__*/_jsx(ButtonForm,{text:txtBtn})})]})]});}export default FormAccount;","map":{"version":3,"names":["styles","useState","ButtonForm","Input","Message","jsx","_jsx","jsxs","_jsxs","FormAccount","_ref","handleSubmit","txtBtn","dataUser","_useState","_useState2","_slicedToArray","newPass","setNewPass","_useState3","_useState4","message","setMessage","_useState5","_useState6","type","setType","user","regexEmail","regexPass","user_newEmail","user_email","validateForm","user_pass","user_passAn","user_passNew","conf_user_passNew","test","user_confPass","OnChangePass","e","_objectSpread","_defineProperty","target","name","value","submit","preventDefault","className","formContainer","children","msg","onSubmit","text","nameInput","placeholder","handleOnChange","btnContainer"],"sources":["D:/Projeto-MoreLife/morelife/src/components/dashForms/formAccount.js"],"sourcesContent":["import styles from './cssForms/forms.module.css'\r\n\r\nimport {useState} from 'react'\r\n\r\nimport ButtonForm from '../form/buttonForm'\r\nimport Input from '../form/input'\r\nimport Message from '../layout/message'\r\n\r\nfunction FormAccount({handleSubmit, txtBtn, dataUser}){\r\n    const [newPass, setNewPass] = useState({\r\n        'user_passAn': '', \r\n        'user_passNew':'', \r\n        'conf_user_passNew': '',\r\n        'user_newEmail': ''\r\n    })\r\n    const [message, setMessage] = useState(\"\")\r\n    const [type, setType] = useState(\"\")\r\n\r\n    const user = dataUser\r\n\r\n    const regexEmail = /\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/;\r\n    const regexPass = /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])([a-zA-Z0-9]{8,})$/;\r\n\r\n    newPass.user_newEmail = user.user_email\r\n    function validateForm() {\r\n        setMessage('')\r\n        if(newPass.user_newEmail === ''){\r\n            setMessage('O email deve estar preenchido!')\r\n            setType('error')\r\n            return false\r\n        }\r\n        if(user.user_pass !== newPass.user_passAn){\r\n            setMessage('A senha atual deve se coincidir!')\r\n            setType('error')\r\n            return false\r\n        }\r\n        if(newPass.user_passAn === newPass.user_passNew){\r\n            setMessage('A nova senha deve ser diferente da atual!')\r\n            setType('error')\r\n            return false\r\n        }\r\n        if((newPass.user_passNew === '' || newPass.conf_user_passNew === '') && newPass.user_passAn !== ''){\r\n            setMessage('Para atualizar é necessário preencher os campos')\r\n            setType('error')\r\n            return false\r\n        }\r\n        if (regexEmail.test(newPass.user_newEmail) === false) {\r\n            setMessage('O email deve existir!')\r\n            setType('error')\r\n            return false\r\n        }\r\n        if (regexPass.test(newPass.user_passNew) === false) {\r\n            setMessage('A senha deve possuir no mínimo 8 caracteres, 1 número, uma letra minúscula e uma letra maiúscula!')\r\n            setType('error')\r\n            return false\r\n        }\r\n        if(newPass.user_passNew !== newPass.conf_user_passNew){\r\n            setMessage('A nova senha deve se coincidir!')\r\n            setType('error')\r\n            return false\r\n        }\r\n\r\n        user.user_pass = newPass.user_passNew\r\n        user.user_confPass = newPass.conf_user_passNew\r\n        user.user_email = newPass.user_newEmail\r\n        newPass.user_passAn= ''\r\n        newPass.user_passNew= ''\r\n        newPass.conf_user_passNew= ''\r\n        setMessage('Atualização feita com sucesso!')\r\n        setType('success')\r\n        return handleSubmit(user)\r\n    }\r\n\r\n\r\n\r\n    function OnChangePass(e) {\r\n        setNewPass({...newPass,[e.target.name]:e.target.value})\r\n        setMessage('')\r\n    }\r\n\r\n    function submit(e){\r\n        e.preventDefault()\r\n        validateForm()\r\n    }\r\n\r\n    return (\r\n        <div className={styles.formContainer}>\r\n            <h2>Dados da Conta</h2>\r\n            {message && <Message msg={message} type={type} />}\r\n            <form onSubmit={submit}>\r\n                <Input\r\n                    type=\"email\"\r\n                    text=\"Email\"\r\n                    nameInput=\"user_newEmail\"\r\n                    placeholder=\"Digite um novo email\"\r\n                    value={newPass.user_newEmail ? newPass.user_newEmail : ''}\r\n                    handleOnChange={OnChangePass}\r\n                />\r\n                <Input\r\n                    type=\"password\"\r\n                    text=\"Senha atual\"\r\n                    nameInput=\"user_passAn\"\r\n                    placeholder=\"Digite sua senha atual\"\r\n                    value={newPass.user_passAn ? newPass.user_passAn : ''}\r\n                    handleOnChange={OnChangePass}\r\n                />\r\n                <Input\r\n                    type=\"password\"\r\n                    text=\"Nova senha\"\r\n                    nameInput=\"user_passNew\"\r\n                    placeholder=\"Digite sua nova senha\"\r\n                    value={newPass.user_passNew ? newPass.user_passNew : ''}\r\n                    handleOnChange={OnChangePass}\r\n                />\r\n                <Input\r\n                    type=\"password\"\r\n                    text=\"Confirmar senha\"\r\n                    nameInput=\"conf_user_passNew\"\r\n                    value={newPass.conf_user_passNew ? newPass.conf_user_passNew : ''}\r\n                    placeholder=\"Confirme sua nova senha\"\r\n                    handleOnChange={OnChangePass}\r\n                />\r\n\r\n                <div className={styles.btnContainer}>\r\n                    <ButtonForm text={txtBtn}/>\r\n                </div>\r\n                \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormAccount"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}